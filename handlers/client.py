from aiogram import types, Dispatcher
from create_bot import bot, dp
from keyboards import client_kb

ALL = ['']


async def text(message: types.Message):
    if (message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ü§©' and message.from_user.id == 825996300) or message.text == 'waresdgfhjkkndcdjbhadioeklamdjkbhrioailjdkvbfrhifjvnaukrhbfajdvjakbkdajvabjkladjvbjavkksdvbj':
        await bot.send_message(message.from_user.id, 'ü§©')
        if ALL:
            await bot.send_message(message.from_user.id, "\n\n".join(ALL))
        else:
            await bot.send_message(message.from_user.id, "—Å–ø–∏—Å–æ–∫ –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç)")
    elif message.text == '–£–¥–∞–ª–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ‚ùå' and message.from_user.id == 825996300:
        await bot.send_message(message.from_user.id, '‚ùå')
        ALL.clear()
        await bot.send_message(message.from_user.id, '–£–¥–∞–ª–∏–ª–∏—Å—å')
    elif message.text != '–ù–∞–ø–∏—Å–∞—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ üíå' and message.text != '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ü§©' and message.text != '–£–¥–∞–ª–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ‚ùå' and message.from_user.id != 825996300 and message.text != 'waresdgfhjkkndcdjbhadioeklamdjkbhrioailjdkvbfrhifjvnaukrhbfajdvjakbkdajvabjkladjvbjavkksdvbj':
        ALL.append(message.text)
        await bot.send_message(message.from_user.id, "–í—Å–µ –∞–Ω–æ–Ω–∏–º–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!)")
        await bot.send_message(message.from_user.id, "–ü—Ä–æ–¥–æ–ª–∂–∞–π –∑–¥–µ—Å—å –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏ ü§ç")


#  @dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    try:
        if message.from_user.id == 1:
            await bot.send_message(message.from_user.id, 'ü§ñ')
            await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç–∏–∫ –ö–∞—Ä–∏–Ω)',
                                reply_markup=client_kb.AccountMenu)
        else:
            await bot.send_message(message.from_user.id, 'üíå')
            await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!) \n–°—é–¥–∞ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –ª—é–±–æ–µ —Å–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—à—å –∞–Ω–æ–Ω–∏–º–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏.')
        #  await message.delete()
    except:
        await message.reply('–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –≥—Ä—É–ø–ø—ã - –∑–∞–ø—Ä–µ—â–µ–Ω–æ!')


#  @dp.message_handler(commands=['help'])
async def command_help(message: types.Message):
    await bot.send_message(message.from_user.id, 'HELP')


#  @dp.message_handler(commands=['admin'])
async def command_admin(message: types.Message):
    await bot.send_message(message.from_user.id, '@KaLiNkA_77')


async def echo(message: types.Message):
    await message.reply("üíå")
    ALL.append(message.text)
    print(ALL)
    await message.answer(", ".join(ALL))


def register_handlers_client(dp: Dispatcher):  # –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
    dp.register_message_handler(command_start, commands=['start'])
    dp.register_message_handler(command_help, commands=['help'])
    dp.register_message_handler(command_admin, commands=['admin'])
    dp.register_message_handler(text)
    dp.register_callback_query_handler(echo, text="A")
